name: Build

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  dependencies:
    name: Create draft release and install dependencies
    runs-on: ubuntu-latest
    outputs: 
      version: v${{steps.version.outputs.prop}}
      upload_url: ${{ steps.create_release.outputs.upload_url }} 

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Upgrade NPM
        run: npm install -g npm

      - name: Install dependencies
        run: npm ci

      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'package.json'
            prop_path: 'version'

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: v${{steps.version.outputs.prop}}
          tag_name: v${{steps.version.outputs.prop}}
          draft: true
          prerelease: false

  build-webui:
    name: Build WebUI
    needs: dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Pre-build
        run: npm run-script prebuild:webui

      - name: Build
        run: npm run build --prod

      - name: Post-build
        run: npm run-script postbuild:webui

      - name: Create zip
        run: |
          mv ./dist/ ./web/
          zip -r release.zip ./web/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.dependencies.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: Transmissionic-webui-${{ needs.dependencies.outputs.version }}.zip
          asset_content_type: application/zip
  build-ios:
    name: Build iOS
    needs: dependencies
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: |
          npm ci

      - name: Build and sync web assets
        run: |
          npm run build --prod
          npx cap sync ios
          npx cap copy ios

      - name: Build IPA
        working-directory: ./ios/App
        run: |
          xcodebuild -sdk iphoneos -workspace App.xcworkspace/ -scheme App -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED="NO" CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO"
          mkdir -p Payload
          mv ~/Library/Developer/Xcode/DerivedData/App-*/Build/Products/Release-iphoneos/App.app Payload
          zip -r app.ipa Payload

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.dependencies.outputs.upload_url }}
          asset_path: ./ios/App/app.ipa
          asset_name: Transmissionic-ios-${{ needs.dependencies.outputs.version }}.ipa
          asset_content_type: application/zip
